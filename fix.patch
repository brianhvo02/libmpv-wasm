diff --git a/src/library_wasmfs_opfs.js b/src/library_wasmfs_opfs.js
index 826f491ec..5e281599b 100644
--- a/src/library_wasmfs_opfs.js
+++ b/src/library_wasmfs_opfs.js
@@ -337,7 +337,7 @@ addToLibrary({
   _wasmfs_opfs_read_blob__deps: ['$wasmfsOPFSBlobs', '$wasmfsOPFSProxyFinish'],
   _wasmfs_opfs_read_blob: async function(ctx, blobID, bufPtr, len, pos, nreadPtr) {
     let blob = wasmfsOPFSBlobs.get(blobID);
-    let slice = blob.slice(pos, pos + len);
+    let slice = blob.slice(Number(pos), Number(pos) + len);
     let nread = 0;
 
     try {
@@ -396,7 +396,7 @@ addToLibrary({
   _wasmfs_opfs_get_size_blob__deps: ['$wasmfsOPFSBlobs'],
   _wasmfs_opfs_get_size_blob: (blobID) => {
     // This cannot fail.
-    return wasmfsOPFSBlobs.get(blobID).size;
+    return BigInt(wasmfsOPFSBlobs.get(blobID).size);
   },
 
   _wasmfs_opfs_get_size_file__deps: ['$wasmfsOPFSFileHandles', '$wasmfsOPFSProxyFinish'],
diff --git a/system/lib/wasmfs/backends/opfs_backend.h b/system/lib/wasmfs/backends/opfs_backend.h
index ffd3d25b5..46a4be772 100644
--- a/system/lib/wasmfs/backends/opfs_backend.h
+++ b/system/lib/wasmfs/backends/opfs_backend.h
@@ -73,7 +73,7 @@ int _wasmfs_opfs_read_blob(em_proxying_ctx* ctx,
                            int blob_id,
                            uint8_t* buf,
                            uint32_t len,
-                           uint32_t pos,
+                           off_t pos,
                            int32_t* nread);
 
 // Synchronous write. Return the number of bytes written.
@@ -88,7 +88,7 @@ void _wasmfs_opfs_get_size_access(em_proxying_ctx* ctx,
                                   off_t* size);
 
 // TODO: return 64-byte off_t.
-uint32_t _wasmfs_opfs_get_size_blob(int blob_id);
+off_t _wasmfs_opfs_get_size_blob(int blob_id);
 
 // Get the size of a file handle via a File Blob.
 void _wasmfs_opfs_get_size_file(em_proxying_ctx* ctx, int file_id, off_t* size);
